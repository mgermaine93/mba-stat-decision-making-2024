SkiReg=lm(VISITS~I(LIFT_CAPACITY/100)+MILES_TRAILS,data=Ski_Resorts)
rm(list = ls())
# Load the packages.
library(tprstats)
tprstats::setup()
library(tprstats)
install.packages("devtools")
devtools::install_github("dnepple/tprstats")
tprstats::setup()
yes
rm(list = ls())
library(tprstats)
tprstats::setup()
qnorm(.975)
qt(.975,12)
quantile(Pgh_May_Temps$Temperature,.75)
library(readxl)
Pgh_May_Temps <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_2021_JP_JS-selected/Statistics_Data_Sets_Hybrid_2021/Pgh_May_Temps.xlsx")
View(Pgh_May_Temps)
View(Pgh_May_Temps)
View(Pgh_May_Temps)
View(Pgh_May_Temps)
quantile(Pgh_May_Temps$Temperature,.75)
quantile(Pgh_May_Temps$Temperature,probs=c(.10,.5,.90))
qt(.975,29)
hist(Pgh_May_Temps$Temperature)
mean(Pgh_May_Temps$Temperature)
meantemp=mean(Pgh_May_Temps$Temperature)
sd(Pgh_May_Temps$Temperature)
quantile(Pgh_May_Temps$Temperature,.25)
quantile(Pgh_May_Temps$Temperature,c(.25,.5,.9))
C=(5/9)*(Pgh_May_Temps$Temperature-32)
plot(Pgh_May_Temps$Temperature,C)
plot(Pgh_May_Temps$Temperature,C, main="Temperature in Celsius vs Temperature in Fahrenheit",
xlab="Fahrenheit",ylab="Celsius")
keep2018 = subset(Pgh_May_Temps,Pgh_May_Temps$Year>2017)
plot(keep2018$Day,keep2018$Temperature)
lines(keep2018$Day,keep2018$Temperature)
plot(Pgh_May_Temps$Temperature,C, main="Temperature in Celsius vs Temperature in Fahrenheit",
xlab="Fahrenheit",ylab="Celsius")
keep2018 = subset(Pgh_May_Temps,Pgh_May_Temps$Year==2018)
plot(keep2018$Day,keep2018$Temperature)
lines(keep2018$Day,keep2018$Temperature) # adds on top of the current plot
rm(list = ls())
# If you wish, set your working directory by clicking Session/Set working Directory/Choose Directory
# Then navigate to the folder where you placed this file and click Select Folder
# Load the packages, ignore warnings.
library(tprstats)
tprstats::setup()
rm(list = ls())
# If you wish, set your working directory by clicking Session/Set working Directory/Choose Directory
# Then navigate to the folder where you placed this file and click Select Folder
# Load the packages, ignore warnings.
library(tprstats)
tprstats::setup()
effect_size=2; stdev=5
pwr.t.test(n =50,d =effect_size/stdev,sig.level =.05,power =NULL,type = c("one.sample"))
pwr.t.test(n =40,d =effect_size/stdev,sig.level =.05,power =NULL,type = c("one.sample"))
effect_size=2; stdev=5
pwr.t.test(n =NULL,d =effect_size/stdev,sig.level =.05,power =.85,type = c("one.sample"))
AB_t2n(percent_B = .5, mean_diff = 2., sd_A = 3,
sd_B = 3, sig_level = .05, power = .85, alternative = 'two_sided')
AB_t2n(percent_B = .1, mean_diff = 2., sd_A = 3,
sd_B = 3, sig_level = .05, power = .85, alternative = 'two_sided')
AB_t2n(percent_B = .2, mean_diff = 2., sd_A = 3,
sd_B = 3, sig_level = .05, power = .85, alternative = 'two_sided')
AB_t2n(percent_B = .3, mean_diff = 2., sd_A = 3,
sd_B = 3, sig_level = .05, power = .85, alternative = 'two_sided')
library(readxl)
Water_Conservation_Data <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Data_Sets_Hybrid_2022/Water_Conservation_Data.xlsx")
View(Water_Conservation_Data)
WatDat34=subset(Water_Conservation_Data, GROUP==3 | GROUP==4)
WatReg34=lm(SUMMER_07~TREAT3,data=WatDat34)
summaryH(WatReg34)
library(readxl)
Diamonds_212 <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Data_Sets_Hybrid_2022/Diamonds_212.xlsx")
View(Diamonds_212)
summaryStats(Diamonds_212)
DiamReg=lm(Price~Carat+Clarity,data = Diamonds_212)
summaryH(DiamReg)
# Calculate fitted values and name them yhat
yhat=fitted(DiamReg)
# Calculate residuals and name them resid
resid=residuals(DiamReg)
Observation=seq(1,212)
# Plot Actual diamond prices and fitted values for each Observation
# Run all four of the following lines at once
plot(Observation,Diamonds_212$Price,ylab="Prices",
main = "Actual (black) and Fitted (red) Prices",col="white")
lines(Observation,Diamonds_212$Price)
lines(Observation,yhat,col="red")
plot(Observation,resid,main = "Residuals",col="white")
lines(Observation,resid)
abline(h=0,col="red")
ActFitResid=data.frame(Diamonds_212$Price,yhat,resid)
write.csv(ActFitResid,"ActFitResid.csv")
DiamReg=lm(Price~Carat+Clarity,data = Diamonds_212)
summaryH(DiamReg)
CIcoefH(DiamReg)
coefTestH(DiamReg,c("Carat=13000"))
library(readxl)
Plot_3D_Example <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Data_Sets_Hybrid_2022/Plot_3D_Example.xlsx")
View(Plot_3D_Example)
RegExample=lm(y~x1+x2,data=Plot_3D_Example)
summaryH(RegExample)
go3DPlot("x1","x2","y",50,15,data=Plot_3D_Example)
# Load the packages.
# Load the packages, ignore warnings.
library(tprstats)
tprstats::setup()
go3DPlot("x1","x2","y",50,15,data=Plot_3D_Example)
go3DPlot("x1","x2","y",50,15,data=Plot_3D_Example)
rm(list = ls())
# Load the packages.
# Load the packages, ignore warnings.
library(tprstats)
tprstats::setup()
rm(list = ls())
# Load the packages.
# Load the packages, ignore warnings.
library(tprstats)
tprstats::setup()
library(readxl)
Diamonds_212 <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Data_Sets_Hybrid_2022/Diamonds_212.xlsx")
View(Diamonds_212)
summaryStats(Diamonds_212)
DiamReg=lm(Price~Carat+Clarity,data = Diamonds_212)
summaryH(DiamReg)
# Calculate fitted values and name them yhat
yhat=fitted(DiamReg)
# Calculate residuals and name them resid
resid=residuals(DiamReg)
Observation=seq(1,212)
plot(Observation,Diamonds_212$Price,ylab="Prices",
main = "Actual (black) and Fitted (red) Prices",col="white")
lines(Observation,Diamonds_212$Price)
lines(Observation,yhat,col="red")
plot(Observation,resid,main = "Residuals",col="white")
lines(Observation,resid)
abline(h=0,col="red")
DiamReg=lm(Price~Carat+Clarity,data = Diamonds_212)
summaryH(DiamReg)
CIcoefH(DiamReg)
coefTestH(DiamReg,c("Carat=13000"))
DiamReg=lm(Price~Carat+Clarity,data = Diamonds_212)
summaryH(DiamReg)
newcarat=rbind(.8,1.3,2.5)
newclarity=rbind(7,6,2)
predict(DiamReg, data.frame(Carat=newcarat,Clarity=newclarity), interval="predict")
library(readxl)
Diamond_Prediction_Data <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Modules/Module 2/Diamond_Prediction_Data.xlsx")
View(Diamond_Prediction_Data)
predict(DiamReg,Diamond_Prediction_Data, interval="predict")
DiamReg=lm(Price~Carat+Clarity,data = Diamonds_212)
summaryH(DiamReg)
scaledCoefficients(DiamReg)
load("~/Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Data_Sets_Hybrid_2022/Water_Conservation_Data.xlsx")
library(readxl)
Water_Conservation_Data <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Data_Sets_Hybrid_2022/Water_Conservation_Data.xlsx")
View(Water_Conservation_Data)
View(Water_Conservation_Data)
View(Water_Conservation_Data)
WatDat34=subset(Water_Conservation_Data,GROUP==3|GROUP==4)
WatReg34=lm(SUMMER_07~TREAT3,data=WatDat34)
summaryH(WatReg34)
library(readxl)
Parcel_Delivery <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2022/Data_Sets_Hybrid_2022/Parcel_Delivery.xlsx")
View(Parcel_Delivery)
ParcelReg=lm(DELTIM~PARCELS+RB+RC,data = Parcel_Delivery)
summaryH(ParcelReg)
par(pty="s")  # This specifies a square plot
newparcels=rbind(0,2)
newrb=rbind(0,0)
newrc=rbind(0,0)
pred_for_plot=predict(ParcelReg, data.frame(PARCELS=newparcels,RB=newrb,RC=newrc))
plot(newparcels,pred_for_plot,xlim=c(0,2.5),ylim=c(17,31),col="white",xlab="Parcels",ylab="Delivery Time", main="Delivery Time As a Function of Parcels for Three Routes")
abline(a=coef(ParcelReg)[1], b=coef(ParcelReg)[2],col="red")
abline(a=(coef(ParcelReg)[1]+coef(ParcelReg)[2]), b=coef(ParcelReg)[2],col="blue")
abline(a=(coef(ParcelReg)[1]+coef(ParcelReg)[3]), b=coef(ParcelReg)[2],col="dark green")
par(pty="s")  # This specifies a square plot
newparcels=rbind(0,2)
newrb=rbind(0,0)
newrc=rbind(0,0)
pred_for_plot=predict(ParcelReg, data.frame(PARCELS=newparcels,RB=newrb,RC=newrc))
plot(newparcels,pred_for_plot,xlim=c(0,25),ylim=c(17,31),col="white",xlab="Parcels",ylab="Delivery Time", main="Delivery Time As a Function of Parcels for Three Routes")
abline(a=coef(ParcelReg)[1], b=coef(ParcelReg)[2],col="red")
abline(a=(coef(ParcelReg)[1]+coef(ParcelReg)[2]), b=coef(ParcelReg)[2],col="blue")
abline(a=(coef(ParcelReg)[1]+coef(ParcelReg)[3]), b=coef(ParcelReg)[2],col="dark green")
# Return to rectangular plot
par(pty="m")
# Parcel Delivery Regression
ParcelReg=lm(DELTIM~PARCELS+RB+RC,data = Parcel_Delivery)
summaryH(ParcelReg)
ParcelReg=lm(DELTIM~PARCELS+RA+RB,data = Parcel_Delivery)
summaryH(ParcelReg)
ParcelRegFac=lm(DELTIM~PARCELS+factor(ROUTE_NAME),data=Parcel_Delivery)
summaryH(ParcelRegFac)
ParcelRegFac=lm(DELTIM~PARCELS+factor(ROUTE_NUMBER),data=Parcel_Delivery)
summaryH(ParcelRegFac)
rm(list = ls())
# Set your working directory by clicking Session/Set working Directory/Choose Directory
# Then navigate to the folder where you placed this file and click Select Folder
# Load the packages, ignore warnings.
library(tprstats)
tprstats::setup()
?coefTestHAC
library(tprstats)
tprstats::setup()
full_information_cdf <- read.csv("~/Dropbox/Signal_market/programs/full_information_cdf.csv")
View(full_information_cdf)
select_distribution(full_information_cdf$quality)
summaryStats(full_information_cdf)
select_distribution(full_information_cdf$CDF)
plot(full_information_cdf$CDF~full_information_cdf$quality)
quality_data <- read.table("~/Dropbox/Signal_market/programs/quality_data.csv", quote="\"", comment.char="")
View(quality_data)
select_distribution(quality_data$V1)
rsn?
?rsn
?select_distribution
library(readxl)
Diamonds_212 <- read_excel("Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2023/Data_Sets_Hybrid_2023/Diamonds_212.xlsx")
View(Diamonds_212)
DiamTwoFactors=lm(log(Price)~log(Carat)+factor(Clarity)+factor(Salesperson),
data=Diamonds_212)
summaryH(DiamTwoFactors)
library(tprstats)
tprstats::setup()
DiamTwoFactors=lm(log(Price)~log(Carat)+factor(Clarity)+factor(Salesperson),
data=Diamonds_212)
summaryH(DiamTwoFactors)
DiamTwoFactors=lm(log(Price)~log(Carat)+factor(Clarity)
+factor(Salesperson,levels=c(8,1,2,3,4,5,6,7,9)),
data=Diamonds_212)
summaryH(DiamTwoFactors)
setwd("~/Dropbox/Teaching/online_hybrid_stat/Stat_Hybrid_Spring_2023/Data_Sets_Hybrid_2023")
library(readxl)
Boston_Condos_577 <- read_excel("Boston_Condos_577.xlsx")
View(Boston_Condos_577)
Marst_Condos=subset(Boston_Condos_577,Boston_Condos_577$Marst==1)
plot(Marst_Condos$Sqft,Marst_Condos$Price)
plot(Price~Sqft,data = Marst_Condos)
MarstReg=lm(Price~Sqft,data = Marst_Condos)
summaryH(MarstReg)
abline(MarstReg,col="red")
yhat=fitted(MarstReg)
predict(MarstReg,data.frame(Sqft=2120),level=.95,interval = "predict")
resid=residuals(MarstReg)
Observation=seq(1,90)
# Plot resid vs Observation
plot(Observation,resid)
which(resid==max(resid))
which(resid==min(resid))
Obs3_33=subset(Marst_Condos,resid==min(resid)|resid==max(resid))
resid
View(Obs3_33)
View(Obs3_33)
library(readxl)
Diamond_E_100 <- read_excel("Diamond_E_100.xlsx")
View(Diamond_E_100)
par(mfrow=c(2,2))  # This command will put four plots in two rows and two columns
with(Diamond_E_100,hist(Carat,col="light blue"))
with(Diamond_E_100,hist(Clarity,col="light blue"))
with(Diamond_E_100,hist(Cut, col="light blue"))
with(Diamond_E_100,hist(Price,breaks=18, col="gold"))
par(mfrow=c(1,1)) # This command restores one-plot-at-a-time format
DiamReg=lm(Price~Carat+Clarity+Cut,data = Diamond_E_100)
summaryH(DiamReg)
elasticities(DiamReg)
PredDat=data.frame(Carat=1.5,Clarity=6,Cut=2)
predict(DiamReg,PredDat,level = .95,interval = "predict")
MyPred=data.frame(predict(DiamReg,PredDat,level = .95,interval = "predict"))
Observation=seq(1,100)
# Calculate residuals
resid=residuals(DiamReg)
# Plot resid vs Observation using black dots as tokens
plot(resid~Observation,pch=16)
# Add a horizontal zero line in red
abline(h=0,col="red")
plot(Observation,resid,pch=16)
# Select the data for the diamond with the largest negative residual
BigResidDiamond=subset(Diamond_E_100,resid==min(resid))
yhat=fitted(DiamReg)
# Plot price vs fitted price
plot(Price~yhat,data = Diamond_E_100)
# Add a 45-degree line
lines(yhat,yhat,col="red")
plot(yhat,Diamond_E_100$Price)
# Note that the two alternative plot formats shown above
# are always available, so I will not repeat both in the future
# Plot residuals vs fitted values
plot(resid~yhat,pch=20)
abline(h=0,col="red")
xcc
library(readxl)
Boston_Condos_577 <- read_excel("Boston_Condos_577.xlsx")
View(Boston_Condos_577)
library(tprstats)
tprstats::setup()
Marst_Condos=subset(Boston_Condos_577,Boston_Condos_577$Marst==1)
plot(Marst_Condos$Sqft,Marst_Condos$Price)
plot(Price~Sqft,data = Marst_Condos)
MarstReg=lm(Price~Sqft,data = Marst_Condos)
summaryH(MarstReg)
# Add regression line
abline(MarstReg,col="red")
yhat=fitted(MarstReg)
predict(MarstReg,data.frame(sqft=2120),level=.95,interval = "predict")
predict(MarstReg,data.frame(Sqft=2120),level=.95,interval = "predict")
resid=residuals(MarstReg)
Observation=seq(1,90)
plot(Observation,resid)
which(resid==max(resid))
max(resid)
resid==max(resid)
which(resid==max(resid))
which(resid==min(resid))
Obs3_33=subset(Marst_Condos,resid==min(resid)|resid==max(resid))
View(Obs3_33)
which(resid==max(resid));
library(readxl)
Diamond_E_100 <- read_excel("Diamond_E_100.xlsx")
View(Diamond_E_100)
par(mfrow=c(2,2))  # This command will put four plots in two rows and two columns
with(Diamond_E_100,hist(Carat,col="light blue"))
with(Diamond_E_100,hist(Clarity,col="light blue"))
with(Diamond_E_100,hist(Cut, col="light blue"))
with(Diamond_E_100,hist(Price,breaks=18, col="gold"))
par(mfrow=c(1,1)) # This command restores one-plot-at-a-time format
par(mfrow=c(2,2))  # This command will put four plots in two rows and two columns
with(Diamond_E_100,hist(Carat,col="light blue"))
with(Diamond_E_100,hist(Clarity,col="light blue"))
with(Diamond_E_100,hist(Cut, col="light blue"))
with(Diamond_E_100,hist(Price,breaks=18, col="gold"))
par(mfrow=c(1,1)) # This command restores one-plot-at-a-time format
#Estimate a regression of Price vs Carat, Clarity, Cut
DiamReg=lm(Price~Carat+Clarity+Cut,data = Diamond_E_100)
summaryH(DiamReg)
elasticities(DiamReg)
PredDat=data.frame(Carat=1.5,Clarity=6,Cut=2)
View(PredDat)
View(PredDat)
predict(DiamReg,PredDat,level = .95,interval = "predict")
predict(DiamReg,PredDat,level = .90,interval = "predict")
predict(DiamReg,PredDat,interval = "predict")
?predict
MyPred=data.frame(predict(DiamReg,PredDat,level = .95,interval = "predict"))
View(MyPred)
View(MyPred)
View(MyPred)
Observation=seq(1,100)
resid=residuals(DiamReg)
plot(resid~Observation,pch=16)
?pch
abline(h=0,col="red")
plot(Observation,resid,pch=16)
abline(h=0,col="red")
BigResidDiamond=subset(Diamond_E_100,resid==min(resid))
View(BigResidDiamond)
View(BigResidDiamond)
summary(Diamond_E_100)
yhat=fitted(DiamReg)
plot(Price~yhat,data = Diamond_E_100)
lines(yhat,yhat,col="red")
plot(resid~yhat,pch=20)
abline(h=0,col="red")
library(readxl)
Boston_Condos_572 <- read_excel("Boston_Condos_572.xlsx")
View(Boston_Condos_572)
library(tprstats)
tprstats::setup()
Marst_Condos=subset(Boston_Condos_577,Boston_Condos_577$Marst==1)
library(readxl)
Boston_Condos_577 <- read_excel("Boston_Condos_577.xlsx")
View(Boston_Condos_577)
Marst_Condos=subset(Boston_Condos_577,Boston_Condos_577$Marst==1)
View(Boston_Condos_577)
View(Marst_Condos)
View(Marst_Condos)
plot(Marst_Condos$Sqft,Marst_Condos$Price)
plot(Price~Sqft,data = Marst_Condos)
MarstReg=lm(Price~Sqft,data = Marst_Condos)
summaryH(MarstReg)
yhat=fitted(MarstReg)
predict(MarstReg,data.frame(Sqft=2120),level=.95,interval = "predict")
resid=residuals(MarstReg)
Observation=seq(1,90)
# Plot resid vs Observation
plot(Observation,resid)
max(resid)
resid==max(resid)
which(resid==max(resid))
which(resid==min(resid))
Obs3_33=subset(Marst_Condos,resid==min(resid)|resid==max(resid))
View(Obs3_33)
library(readxl)
Diamond_E_100 <- read_excel("Diamond_E_100.xlsx")
View(Diamond_E_100)
par(mfrow=c(2,2))  # This command will put four plots in two rows and two columns
with(Diamond_E_100,hist(Carat,col="light blue"))
with(Diamond_E_100,hist(Clarity,col="light blue"))
with(Diamond_E_100,hist(Cut, col="light blue"))
with(Diamond_E_100,hist(Price,breaks=18, col="gold"))
with(Diamond_E_100,hist(Carat,col="light blue"))
par(mfrow=c(1,1)) # This command restores one-plot-at-a-time format
with(Diamond_E_100,hist(Carat,col="light blue"))
DiamReg=lm(Price~Carat+Clarity+Cut,data = Diamond_E_100)
summaryH(DiamReg)
elasticities(DiamReg)
# Do prediction for diamond with Carat=1.5, Clarity=6, Cut=2
PredDat=data.frame(Carat=1.5,Clarity=6,Cut=2)
predict(DiamReg,PredDat,level = .95,interval = "predict")
predict(DiamReg,PredDat,level = .90,interval = "predict")
MyPred=data.frame(predict(DiamReg,PredDat,level = .95,interval = "predict"))
View(MyPred)
Observation=seq(1,100)
# Calculate residuals
resid=residuals(DiamReg)
# Plot resid vs Observation using black dots as tokens
plot(resid~Observation,pch=16)
?pch
abline(h=0,col="red")
BigResidDiamond=subset(Diamond_E_100,resid==min(resid))
View(BigResidDiamond)
summary(Diamond_E_100)
yhat=fitted(DiamReg)
plot(Price~yhat,data = Diamond_E_100)
lines(yhat,yhat,col="red")
plot(resid~yhat,pch=20)
abline(h=0,col="red")
plot(resid~Diamond_E_100$Price,pch=20)
abline(h=0,col="red")
library(readxl)
Boston_Condos_577 <- read_excel("Boston_Condos_577.xlsx")
View(Boston_Condos_577)
library(tprstats)
tprstats::setup()
Marst_Condos=subset(Boston_Condos_577,Boston_Condos_577$Marst==1)
View(Marst_Condos)
View(Marst_Condos)
plot(Marst_Condos$Sqft,Marst_Condos$Price)
plot(Price~Sqft,data = Marst_Condos)
MarstReg=lm(Price~Sqft,data = Marst_Condos)
summaryH(MarstReg)
yhat=fitted(MarstReg)
predict(MarstReg,data.frame(Sqft=2120),level=.95,interval = "predict")
resid=residuals(MarstReg)
Observation=seq(1,90)
plot(Observation,resid)
max(resid)
resid==max(resid)
which(resid==max(resid))
which(resid==min(resid))
View(Marst_Condos)
Obs3_33=subset(Marst_Condos,resid==min(resid)|resid==max(resid))
View(Obs3_33)
rm(list=ls())
library(readxl)
Diamond_E_100 <- read_excel("Diamond_E_100.xlsx")
View(Diamond_E_100)
par(mfrow=c(2,2))  # This command will put four plots in two rows and two columns
with(Diamond_E_100,hist(Carat,col="light blue"))
with(Diamond_E_100,hist(Clarity,col="light blue"))
with(Diamond_E_100,hist(Cut, col="light blue"))
with(Diamond_E_100,hist(Price,breaks=18, col="gold"))
par(mfrow=c(2,2))  # This command will put four plots in two rows and two columns
with(Diamond_E_100,hist(Carat,col="light blue"))
with(Diamond_E_100,hist(Clarity,col="light blue"))
with(Diamond_E_100,hist(Cut, col="light blue"))
with(Diamond_E_100,hist(Price,breaks=18, col="gold"))
library(tprstats)
tprstats::setup()
par(mfrow=c(2,2))  # This command will put four plots in two rows and two columns
with(Diamond_E_100,hist(Carat,col="light blue"))
with(Diamond_E_100,hist(Clarity,col="light blue"))
with(Diamond_E_100,hist(Cut, col="light blue"))
with(Diamond_E_100,hist(Price,breaks=18, col="gold"))
with(Diamond_E_100,hist(Carat,col="light blue"))
par(mfrow=c(1,1)) # This command restores one-plot-at-a-time format
with(Diamond_E_100,hist(Carat,col="light blue"))
